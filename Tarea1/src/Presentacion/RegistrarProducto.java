/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.Categoria;
import Logica.Fabrica;
import Logica.IControladorPedido;
import Logica.IControladorProducto;
import Logica.IControladorUsuario;
import Logica.ManejadorProducto;
import Logica.ManejadorUsuario;
import Logica.Producto;
import Logica.Usuario;
import java.awt.Image;
import java.io.File;
import java.util.Iterator;
import java.util.Map;
import java.util.SortedSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class RegistrarProducto extends javax.swing.JInternalFrame {
   
    private IControladorProducto ICP;
    
    public void ocultar(){
    
        this.txtNombre.setVisible(false);
        this.txtDescripcion.setVisible(false);
        this.txtPrecio.setVisible(false);
        this.Nombre.setVisible(false);
        this.Descripcion.setVisible(false);
        this.Precio.setVisible(false);
        this.LabelImagen.setVisible(false);
        this.SeleccionarImagen.setVisible(false);
        this.Promocion.setVisible(false);
        this.Individual.setVisible(false);
        this.SeleccioneProducto.setVisible(false);
        this.Productos.setVisible(false);
        this.Cant.setVisible(false);
        this.Cantidad.setVisible(false);
        this.Agregar.setVisible(false);
        this.tablaProducto.setVisible(false);
        this.Registrar.setVisible(false);
    }
    public void comboboxRestaurante(){
          //PARA CARGAR COMBOBOX DE RESTARUANTES
        ManejadorUsuario MU = ManejadorUsuario.getinstance();            
        Map ColRest= MU.getColeccionRestaurante();
        int posicion=0;
        Iterator<Usuario> it = ColRest.values().iterator();
            Usuario Rest=null;
            String a=(String) SelectRestaurante.getItemAt(0);
            if(a==null){
                while (it.hasNext()) {
                    Rest=it.next();
                    SelectRestaurante.insertItemAt(Rest.getnickname(), posicion);
                    posicion++;
                }
            }
           
         
    }
           
    public RegistrarProducto() {
        initComponents();
        Fabrica fabrica = Fabrica.getInstance();
        ICP = fabrica.getIControladorProducto();
        ocultar();
        comboboxRestaurante();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Botonoes = new javax.swing.ButtonGroup();
        IngreseDatosCliente = new javax.swing.JLabel();
        Descripcion = new javax.swing.JLabel();
        Nombre = new javax.swing.JLabel();
        Precio = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        Cancelar = new javax.swing.JButton();
        Registrar = new javax.swing.JButton();
        LabelImagen = new javax.swing.JLabel();
        SeleccionarImagen = new javax.swing.JButton();
        Individual = new javax.swing.JRadioButton();
        Promocion = new javax.swing.JRadioButton();
        Productos = new javax.swing.JComboBox();
        SeleccioneProducto = new javax.swing.JLabel();
        Cant = new javax.swing.JLabel();
        Agregar = new javax.swing.JButton();
        Cantidad = new javax.swing.JSpinner();
        Restaurante = new javax.swing.JLabel();
        SelectRestaurante = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProducto = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);

        IngreseDatosCliente.setText("Ingrese los siguientes datos:");

        Descripcion.setText("Descripcion");

        Nombre.setText("Nombre");

        Precio.setText("Precio");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionActionPerformed(evt);
            }
        });

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        Registrar.setText("Registrar");
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt);
            }
        });

        LabelImagen.setText("Imagen");
        LabelImagen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SeleccionarImagen.setText("Seleccionar Imagen");
        SeleccionarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionarImagenActionPerformed(evt);
            }
        });

        Botonoes.add(Individual);
        Individual.setText("Individual");
        Individual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IndividualActionPerformed(evt);
            }
        });

        Botonoes.add(Promocion);
        Promocion.setText("Promocion");
        Promocion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PromocionActionPerformed(evt);
            }
        });

        Productos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductosActionPerformed(evt);
            }
        });

        SeleccioneProducto.setText("Producto");

        Cant.setText("Cantidad");

        Agregar.setText("Agregar");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        Cantidad.setAutoscrolls(true);

        Restaurante.setText("Restaurante:");

        SelectRestaurante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectRestauranteActionPerformed(evt);
            }
        });

        tablaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaProducto);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Agregar)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SeleccioneProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Productos, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addComponent(Cant, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Cancelar)
                                .addGap(267, 267, 267)
                                .addComponent(Registrar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Individual)
                                        .addComponent(Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Restaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53)))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(txtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(txtPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(LabelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(SelectRestaurante, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(Promocion)
                                    .addComponent(SeleccionarImagen))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(IngreseDatosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IngreseDatosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Restaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Individual)
                    .addComponent(Promocion))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Descripcion)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SeleccionarImagen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cant)
                    .addComponent(Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Productos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SeleccioneProducto))
                .addGap(18, 18, 18)
                .addComponent(Agregar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Registrar)
                    .addComponent(Cancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        //RegistrarCliente registrar = new RegistrarCliente();
        this.dispose();
        //TODO add your handling code here:
    }//GEN-LAST:event_CancelarActionPerformed

    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarActionPerformed
        ManejadorProducto MP = ManejadorProducto.getinstance();
               
        if(!this.Individual.isSelected() && (!this.Promocion.isSelected())){
            JOptionPane.showMessageDialog(this,"Seleccione si el producto es individual o promocion","REGISTRO",JOptionPane.WARNING_MESSAGE);
            Individual.requestFocus();
        }
        if(this.Promocion.isSelected()){
            if(this.Productos.getSelectedIndex() == -1){
                JOptionPane.showMessageDialog(this,"Ingrese el nombre","REGISTRO",JOptionPane.WARNING_MESSAGE);
                txtNombre.requestFocus();
            }
        } 
        
        if(this.txtNombre.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Ingrese el nombre","REGISTRO",JOptionPane.WARNING_MESSAGE);
            txtNombre.requestFocus();
        }else if(this.txtDescripcion.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Ingrese descripcion","REGISTRO",JOptionPane.WARNING_MESSAGE);
            txtDescripcion.requestFocus();
        }else if(this.txtPrecio.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Ingrese el precio","REGISTRO",JOptionPane.WARNING_MESSAGE);
            txtPrecio.requestFocus();
        }else {
            Object res = SelectRestaurante.getSelectedItem();
            String Restaurante = String.valueOf(res);
            ICP.AltaProducto(Restaurante,txtNombre.getText(),txtDescripcion.getText(),txtPrecio.getText());
            JOptionPane.showMessageDialog(this,"Producto ingresado con Exito");
            txtNombre.setText("");
            dispose();
        }
    }//GEN-LAST:event_RegistrarActionPerformed

    File fichero;
    private void SeleccionarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionarImagenActionPerformed
        // TODO add your handling code here:
        int resultado;

        CargarFoto ventana = new CargarFoto();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG y PNG","jpg","png");
        ventana.FileChooser.setFileFilter(filtro);
        resultado= ventana.FileChooser.showOpenDialog(null);

        if (JFileChooser.APPROVE_OPTION == resultado){
            fichero = ventana.FileChooser.getSelectedFile();
            try{
                ImageIcon icon = new ImageIcon(fichero.toString());
                Icon icono = new ImageIcon(icon.getImage().getScaledInstance(LabelImagen.getWidth(), LabelImagen.getHeight(), Image.SCALE_DEFAULT));
                LabelImagen.setText(null);
                LabelImagen.setIcon( icono );

            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Error abriendo la imagen "+ ex);
            }
        }
    }//GEN-LAST:event_SeleccionarImagenActionPerformed

    private void ProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductosActionPerformed

    private void IndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IndividualActionPerformed
        // TODO add your handling code here:
        this.SeleccioneProducto.setVisible(false);
        this.Productos.setVisible(false);
        this.Cant.setVisible(false);
        this.Cantidad.setVisible(false);
        this.Agregar.setVisible(false);
        this.tablaProducto.setVisible(false);
    }//GEN-LAST:event_IndividualActionPerformed

    private void PromocionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PromocionActionPerformed
        // TODO add your handling code here:
        this.SeleccioneProducto.setVisible(true);
        this.Productos.setVisible(true);
        this.Cant.setVisible(true);
        this.Cantidad.setVisible(true);
        this.Agregar.setVisible(true);
        this.tablaProducto.setVisible(true);
        
         //PARA CARGAR COMBOBOX DE PRDUCTOS
        Object n = SelectRestaurante.getSelectedItem();
        String nickname = String.valueOf(n);
        ManejadorProducto MP = ManejadorProducto.getinstance();  
        Map ColeccionProducto = MP.getColeccionProductos(nickname);
        final Iterator<Producto> itProducto = ColeccionProducto.values().iterator();
            Producto prod=null;
            String b=(String) Productos.getItemAt(0);
            if(b==null){
                while (itProducto.hasNext()) {
                    prod=itProducto.next(); //en cat tenemos el valor
                    Productos.addItem(prod.getnombre());  
                }
            } 
    }//GEN-LAST:event_PromocionActionPerformed

    private void SelectRestauranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectRestauranteActionPerformed
        // TODO add your handling code here:
        if(this.SelectRestaurante.getSelectedIndex() != -1){
            this.txtNombre.setVisible(true);
            this.txtDescripcion.setVisible(true);
            this.txtPrecio.setVisible(true);
            this.Nombre.setVisible(true);
            this.Descripcion.setVisible(true);
            this.Precio.setVisible(true);
            this.LabelImagen.setVisible(true);
            this.SeleccionarImagen.setVisible(true);
            this.Promocion.setVisible(true);
            this.Individual.setVisible(true);
            this.SeleccioneProducto.setVisible(true);
            this.Productos.setVisible(true);
            this.Cant.setVisible(true);
            this.Cantidad.setVisible(true);
            this.Agregar.setVisible(true);
            this.tablaProducto.setVisible(true);
            this.Registrar.setVisible(true);
        }
    }//GEN-LAST:event_SelectRestauranteActionPerformed
    int fila=0;
    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        //AGREGAR FILAS A LA TABLA
        DefaultTableModel modelo= (DefaultTableModel) this.tablaProducto.getModel();
        int columna = modelo.getColumnCount();
        modelo.addRow(new Object[columna]);
        tablaProducto.setModel(modelo);

        //AGREGO VALORES A  LAS FILAS
        tablaProducto.setValueAt(Productos.getSelectedItem(), fila, 0);
        tablaProducto.setValueAt(Cantidad.getValue(), fila, 1);
        fila++;     
    }//GEN-LAST:event_AgregarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton Agregar;
    private javax.swing.ButtonGroup Botonoes;
    private javax.swing.JButton Cancelar;
    public javax.swing.JLabel Cant;
    public javax.swing.JSpinner Cantidad;
    public javax.swing.JLabel Descripcion;
    public javax.swing.JRadioButton Individual;
    private javax.swing.JLabel IngreseDatosCliente;
    public javax.swing.JLabel LabelImagen;
    public javax.swing.JLabel Nombre;
    public javax.swing.JLabel Precio;
    public javax.swing.JComboBox Productos;
    public javax.swing.JRadioButton Promocion;
    public javax.swing.JButton Registrar;
    private javax.swing.JLabel Restaurante;
    public javax.swing.JButton SeleccionarImagen;
    public javax.swing.JLabel SeleccioneProducto;
    public javax.swing.JComboBox SelectRestaurante;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProducto;
    public javax.swing.JTextField txtDescripcion;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
